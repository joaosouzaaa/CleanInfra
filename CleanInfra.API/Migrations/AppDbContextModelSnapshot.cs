// <auto-generated />
using CleanInfra.API.DatabaseContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CleanInfra.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CleanInfra.API.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("scientific_name");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("species");

                    b.Property<int>("ZooId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.ToTable("Animals", "Default");
                });

            modelBuilder.Entity("CleanInfra.API.Entities.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("EntryPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("entry_price");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Zoos", "Default");
                });

            modelBuilder.Entity("CleanInfra.API.Entities.Animal", b =>
                {
                    b.HasOne("CleanInfra.API.Entities.Zoo", "Zoo")
                        .WithMany("Animals")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Zoo_Animal");

                    b.Navigation("Zoo");
                });

            modelBuilder.Entity("CleanInfra.API.Entities.Zoo", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
